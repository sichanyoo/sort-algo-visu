[{"Y:\\Chan\\CS\\Projects\\sort-algo-visu\\src\\index.js":"1","Y:\\Chan\\CS\\Projects\\sort-algo-visu\\src\\App.js":"2","Y:\\Chan\\CS\\Projects\\sort-algo-visu\\src\\reportWebVitals.js":"3","Y:\\Chan\\CS\\Projects\\sort-algo-visu\\src\\visualizer\\sortAlgoVisu.jsx":"4","Y:\\Chan\\CS\\Projects\\sort-algo-visu\\src\\visualizer\\SortAlgoVisu.jsx":"5","Y:\\Chan\\CS\\Projects\\sort-algo-visu\\src\\algosAndAni\\sortAlgos.js":"6"},{"size":517,"mtime":1609338825922,"results":"7","hashOfConfig":"8"},{"size":279,"mtime":1609350283286,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1609336526027,"results":"10","hashOfConfig":"8"},{"size":2330,"mtime":1609342799479,"results":"11","hashOfConfig":"8"},{"size":2846,"mtime":1609351695866,"results":"12","hashOfConfig":"8"},{"size":164,"mtime":1609352032966,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"oua70r",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"Y:\\Chan\\CS\\Projects\\sort-algo-visu\\src\\index.js",[],["29","30"],"Y:\\Chan\\CS\\Projects\\sort-algo-visu\\src\\App.js",["31"],"import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport SortAlgoVisu from './visualizer/SortAlgoVisu';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <SortAlgoVisu></SortAlgoVisu>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default App;\r\n","Y:\\Chan\\CS\\Projects\\sort-algo-visu\\src\\reportWebVitals.js",[],"Y:\\Chan\\CS\\Projects\\sort-algo-visu\\src\\visualizer\\sortAlgoVisu.jsx",["32","33","34","35"],"Y:\\Chan\\CS\\Projects\\sort-algo-visu\\src\\visualizer\\SortAlgoVisu.jsx",["36","37","38","39","40"],"import React from 'react';\r\nimport './SortAlgoVisu.css';\r\nimport {getMergeSortAni} from '../algosAndAni/sortAlgos.js';\r\n\r\n//interval between visual changes in ms\r\nconst SPEED = 1;\r\n\r\n//number of values to sort in array\r\nconst BARS = 250;\r\n\r\n//default color of bars\r\nconst DEFAULT_COLOR = 'black';\r\n\r\n//color of bars during comparison\r\nconst COMP_COLOR = 'blue';\r\n\r\n//color of bars at sorted position\r\nconst END_COLOR = 'green';\r\n\r\n//main class\r\nexport default class SortAlgoVisu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //set array as member of this.state\r\n        this.state = {arr: [], };\r\n    }\r\n\r\n    //randomize array first time website is opened\r\n    componentDidMount() {\r\n        this.initArr();\r\n    }\r\n\r\n    //method to re-randomize sorted array\r\n    initArr() {\r\n        //new arr to store randomized arr\r\n        const arr = [];\r\n        for (let i = 0; i < BARS; i++) {\r\n            arr.push(randomIntInInterval(10, 700));\r\n        }\r\n        //reset this.state as newly randomized array using setState()\r\n        this.setState({arr});\r\n    } \r\n\r\n    /*//////////////////////////////////////\r\n        sort algo methods \r\n    *///////////////////////////////////////\r\n    mergeSort() {\r\n\r\n    }\r\n\r\n    quickSort() {\r\n\r\n    }\r\n\r\n    heapSort() {\r\n\r\n    }\r\n\r\n    bubbleSort() {\r\n\r\n    }\r\n\r\n    countingSort() {\r\n\r\n    }\r\n\r\n\r\n    //render method\r\n    render() {\r\n        const {arr} = this.state;\r\n\r\n        return (\r\n            <div className = \"arr-container\">\r\n                <br></br>\r\n                <button onClick={() => this.initArr()} className = \"generate-button\">Generate New Array</button>\r\n                &nbsp;\r\n                <button onClick={() => this.mergeSort()} className = \"button\">Merge Sort</button>\r\n                &nbsp;\r\n                <button onClick={() => this.quickSort()} className = \"button\">Quick Sort</button>\r\n                &nbsp;\r\n                <button onClick={() => this.heapSort()} className = \"button\">Heap Sort</button>\r\n                &nbsp;\r\n                <button onClick={() => this.bubbleSort()} className = \"button\">Bubble Sort</button>\r\n                &nbsp;\r\n                <button onClick={() => this.countingSort()} className = \"button\">Counting Sort</button>\r\n                <br></br>\r\n                <br></br>\r\n                {arr.map((value, idx) => (\r\n                    <div \r\n                        className = \"arr-bar\" \r\n                        key = {idx} \r\n                        style = {{\r\n                            height: value, \r\n                    }}></div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n//function to generate random int betweeen min and max, inclusive\r\nfunction randomIntInInterval(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\n","Y:\\Chan\\CS\\Projects\\sort-algo-visu\\src\\algosAndAni\\sortAlgos.js",["41","42"],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":2,"column":8,"nodeType":"49","messageId":"50","endLine":2,"endColumn":12},{"ruleId":"47","severity":1,"message":"51","line":5,"column":7,"nodeType":"49","messageId":"50","endLine":5,"endColumn":12},{"ruleId":"47","severity":1,"message":"52","line":11,"column":7,"nodeType":"49","messageId":"50","endLine":11,"endColumn":20},{"ruleId":"47","severity":1,"message":"53","line":14,"column":7,"nodeType":"49","messageId":"50","endLine":14,"endColumn":17},{"ruleId":"47","severity":1,"message":"54","line":17,"column":7,"nodeType":"49","messageId":"50","endLine":17,"endColumn":16},{"ruleId":"47","severity":1,"message":"55","line":3,"column":9,"nodeType":"49","messageId":"50","endLine":3,"endColumn":24},{"ruleId":"47","severity":1,"message":"51","line":6,"column":7,"nodeType":"49","messageId":"50","endLine":6,"endColumn":12},{"ruleId":"47","severity":1,"message":"52","line":12,"column":7,"nodeType":"49","messageId":"50","endLine":12,"endColumn":20},{"ruleId":"47","severity":1,"message":"53","line":15,"column":7,"nodeType":"49","messageId":"50","endLine":15,"endColumn":17},{"ruleId":"47","severity":1,"message":"54","line":18,"column":7,"nodeType":"49","messageId":"50","endLine":18,"endColumn":16},{"ruleId":"47","severity":1,"message":"56","line":6,"column":10,"nodeType":"49","messageId":"50","endLine":6,"endColumn":19},{"ruleId":"47","severity":1,"message":"57","line":10,"column":10,"nodeType":"49","messageId":"50","endLine":10,"endColumn":15},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'SPEED' is assigned a value but never used.","'DEFAULT_COLOR' is assigned a value but never used.","'COMP_COLOR' is assigned a value but never used.","'END_COLOR' is assigned a value but never used.","'getMergeSortAni' is defined but never used.","'mergeSort' is defined but never used.","'merge' is defined but never used.","no-global-assign","no-unsafe-negation"]